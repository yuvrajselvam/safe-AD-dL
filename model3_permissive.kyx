/* Exported from KeYmaera X v4.9.9 */

Theorem "Safe AD dL v2/03: Model 3 - Permissive"
  Description "Safety controller with permissive decisions, vCrit is zero".
  Title "Model 3 - Permissive".

Definitions       /* function symbols cannot change their value */
  Real aMinS;     /* maximum braking - safety controller */
  Real aMaxN;     /* maximum acceleration - nominal controller */
  Real aMinN;     /* maximum braking - nominal controller */
  Real T;         /* maximum sampling time */
End.
    
ProgramVariables  /* program variables may change their value over time */
  Real x;         /* position of the ego car */
  Real v;         /* velocity of the ego car */
  Real a;         /* acceleration of the ego car */
  Real xCrit;     /* critical position, xCrit */
  Real tau;         /* clock variable */
  Real aN;        /* nominal acceleration */
End.


Problem           /* differential dynamic logic formula */ 
    v^2<=2*aMinS*(xCrit-x) & v>=0  & aMaxN>=0 & aMinS>0 & T>0 & aMinN>0 /* init */
 -> [
      {
        {
         {{xCrit:=*;?(v^2<=2*aMinS*(xCrit-x));} ++ {?true;}} 
         aN:=*; ?(-aMinN<=aN & aN<=aMaxN);    /* env */                                            
          {
             {?(v+aN*T >=0);
                {
                    {?((v+aN*T)^2 <= 2*aMinS*(xCrit-x-(v*T)-(aN*T*T*0.5))); a:=aN;} /* if (ok) */
                ++ 
                    {?(!(v+aN*T)^2 <= 2*aMinS*(xCrit-x-(v*T)-(aN*T*T*0.5))); a:=-aMinS;} /* else */
                }
             } 
             ++ 
             {?(!(v+aN*T >=0));
                {
                    {?(-v^2/(2*aN) <= xCrit-x); a:=aN;}    /* if (ok) */
                ++ 
                    {?(!(-v^2/(2*aN) <= (xCrit-x))); a:=-aMinS;} /* else */
                }             
             }
          }
        }  
        tau := 0; {x'=v, v'=a, tau'=1 & v>=0 & tau<=T}
      }*@invariant(v^2<=2*aMinS*(xCrit-x)) /* loop invariant */
    ] (x>=xCrit -> v=0) /* guarantee */ 
End.

End.
